/**
 * 
 */
/**
 * @author 15753
 *
 */
package 第06章_共享模型之无锁.s02_CAS与volatile.c04_CAS的特点;
/*
CAS 的特点
	结合 CAS 和 volatile 可以实现无锁并发，适用于线程数少、多核 CPU 的场景下。
		1.CAS 是基于乐观锁的思想：最乐观的估计，不怕别的线程来修改共享变量，就算改了也没关系，我吃亏点再
		     重试呗。
		2.synchronized 是基于悲观锁的思想：最悲观的估计，得防着其它线程来修改共享变量，我上了锁你们都别想
		     改，我改完了解开锁，你们才有机会。
        3.CAS 体现的是无锁并发、无阻塞并发，请仔细体会这两句话的意思
		     3.1 因为没有使用 synchronized，所以线程不会陷入阻塞，这是效率提升的因素之一
	         3.2 但如果竞争激烈，可以想到重试必然频繁发生，反而效率会受影响

*/