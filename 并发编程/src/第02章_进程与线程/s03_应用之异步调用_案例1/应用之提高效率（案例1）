充分利用多核 cpu 的优势，提高运行效率。想象下面的场景，执行 3 个计算，最后将计算结果汇总。
	计算 1 花费 10 ms
	计算 2 花费 11 ms
	计算 3 花费 9 ms
	汇总需要 1 ms

	1.如果是串行执行，那么总共花费的时间是 10 + 11 + 9 + 1 = 31ms
	2.但如果是四核 cpu，各个核心分别使用线程线程是并行的，花费时间只取决于
	     最长的那个线程运行的时间，即 11ms 最后加上汇总时间只会花费 12ms
	     
注意:
	需要在多核 cpu 才能提高效率，单核仍然时是轮流执行
	
1) 设计
	>>>>> 代码见【应用之效率-案例1】<<<<<
	
2) 结论
	1. 单核 cpu 下，多线程不能实际提高程序运行效率，只是为了能够在不同的任务之间切换，
	       不同线程轮流使用cpu ，不至于一个线程总占用 cpu，别的线程没法干活
	       
	2. 多核 cpu 可以并行跑多个线程，但能否提高程序运行效率还是要分情况的
		2.1 有些任务，经过精心设计，将任务拆分，并行执行，当然可以提高程序的运行效率。
		        但不是所有计算任务都能拆分（参考后文的【阿姆达尔定律】）
		2.2 也不是所有任务都需要拆分，任务的目的如果不同，谈拆分和效率没啥意义
		
	3. IO 操作不占用 cpu，只是我们一般拷贝文件使用的是【阻塞 IO】，这时相当于线程虽然不用 cpu，
	       但需要一直等待 IO 结束，没能充分利用线程。所以才有后面的【非阻塞 IO】和【异步 IO】优化